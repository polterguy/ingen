/*
 * Main launch file for InGen.
 *
 * This file creates the main wire frame for the entire application, both
 * its front end, and its backend. If you wish to change an aspect of your app
 * _"globally"_, this is where you would want to add your code.
 */


/*
 * Including Micro's CSS files, and skin file used for system, defaulting to "magic-forrest".
 */
select-data:x:/*/*/ingen.settings.css-skin/*?value
if:x:/-/*?value
  set:x:/../*/micro.css.include/*?value
    src:x:/@select-data/*?value
micro.css.include
  skin:magic-forrest


/*
 * Including main CSS file for app.
 */
p5.web.include-css-file:@INGEN/media/main.css


/*
 * Ensuring we include PayPal's JavaScript file on initial request,
 * since we might need to accept payments in app.
 */
micro.widgets.paypal-button.ensure-checkout-js


/*
 * The next two pieces of code might need some explanation, since this is the "access control"
 * of the system.
 *
 * It invokes the "get-jumbo-buttons.hl" file inside of the "/modules/" folder, and adds the result
 * of the invocation to that file into the Jumbo Buttons wrapper widget below on page. This file internally
 * invokes [p5.auth.has-access], passing in the [default-access] argument as the default argument.
 * This results in that by default all users, insluding guest visitors, have access to all "frontend"
 * modules - While only a root account has access to the "backend" modules.
 *
 * This can be overridden by creating access objects in your installation using e.g. "Peeples" to
 * associate such access objects with the access object list of the system. See the comments in the
 * "/modules/common/get-jumbo-buttons.hl" file for details about how to create such access objects.
 */


/*
 * Creating main front end wire frame.
 */
create-widget
  class:container
  oninit

    /*
     * Starting pingback loop.
     */
    ingen.pingback.keep-alive

    /*
     * Setting initial title to its default value.
     */
    ingen.header.set

  events


    /*
     * Help context Active Event.
     */
    desktop.help.get-context
      return:@INGEN/help-files/InGen/index.hl

    /*
     * Event sink to make sure our help files are injected into the right container.
     *
     * Notice, this is simply here as a sink for the help system since our page is using a
     * background image, to make sure we get a non-transparent bg for our help files, to
     * make it possible to actually read them.
     */
    desktop.help.get-widget-arguments

      /*
       * Checking if help container exists, and if not, we create it.
       */
      if
        fetch:x:/0/0?value
          widget-exists:ingen-help-file-sink
        =:bool:false

        /*
         * Creating our main help wrapper.
         */
        create-container-widget:ingen-help-file-sink
          class:container-fullscreen
          style:"background-color:#fafafa;"

      /*
       * Returning [parent] to caller to make sure we inject help into the correct container.
       */
      return
        parent:ingen-help-file-sink


    /*
     * Pingback event to keep session alive on server, in case app is in kiosk mode.
     */
    ingen.pingback.keep-alive

      /*
       * In case app is in "kiosk mode", we create a pingback to server ever 10 minutes,
       * to avoid destroying session, and keeping the client "alive".
       */
      micro.lambda.create-timeout
        milliseconds:600000
        onfinish

          /*
           * Recursively invoking event creating new timer.
           */
          ingen.pingback.keep-alive

  widgets
    div
      class:row
      widgets
        div
          class:col
          widgets

            /*
             * The general toolbar for our app.
             *
             * This is the "toolbar" displayed at the top/right corner of the InGen app.
             * Notice, this bugger is actually not populated by our app, since it simply
             * allows the main "Desktop" module to populate it with its plugins.
             */
            container
              class:strip themepark-top-buttons toolbar

            /*
             * Header for app.
             */
            literal
              element:h1
              class:themepark-header center
              events

                /*
                 * Used by different modules when the header should be changed for some reasons.
                 */
                ingen.header.set

                  /*
                   * Checking if caller specified a value, and if not, resetting header to
                   * original value.
                   */
                  if:x:/../*/_arg?value
                    not

                    /*
                     * Resetting header and title to default value.
                     */
                    set-widget-property:x:/../*/_event?value
                      innerValue:InGen Theme Park
                    p5.web.page.set-title:InGen Theme Park

                  else

                    /*
                     * Setting header and title to specified [_arg] value.
                     */
                    set-widget-property:x:/../*/_event?value
                      innerValue:x:/../*/_arg?value
                    p5.web.page.set-title:x:/../*/_arg?value

            /*
             * Main content surface for Jumbo Buttons in our app.
             *
             * These are our "launch modules" buttons, that allows the user to interact with
             * the app in general, and launches modules, such as "front end exhibit module", etc.
             *
             * This widget is dynamically populated according to the access control objects
             * in P5, using [p5.auth.has-access]. This occurs in the "get-jumbo-buttons.hl"
             * file which is invoked twice further up on page, passing in frontend module
             * (default to access granted) and backend modules (default to access denied).
             */
            div:themepark-jumbo-buttons
              class:center themepark-center-content
              widgets
                ingen.widgets._jumbo-buttons
                  folder:frontend
                  default-access:true
                ingen.widgets._jumbo-buttons
                  folder:common
                  default-access:true
                ingen.widgets._jumbo-buttons
                  folder:backend
                  default-access:false

            /*
             * Container widget, for displaying dynamic "view content" for modules.
             */
            container:themepark-dynamic-content
              class:center themepark-center-additional-content
              events

                /*
                 * Clears out all content frommain widget.
                 */
                ingen.main-viewport.clear
                  clear-widget:themepark-dynamic-content


/*
 * Checking if this is a request for a tour.
 */
micro.url.get-entities
if:x:/@micro.url.get-entities/1?name
  =:tour

  /*
   * Automatically launching tour.
   */
  eval-x:x:/+/*
  micro.evaluate.file:@INGEN/modules/tours/frontend/ui/view-single-tour.hl
    id:x:/@micro.url.get-entities/2?name.long
