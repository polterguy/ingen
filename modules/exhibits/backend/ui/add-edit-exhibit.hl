/*
 * Allows the user to add a new exhibit, or edit an existing exhibit.
 */
micro.lambda.contract.optional:x:/..
  id:long


/*
 * Verifying access.
 */
ingen.access._throw-if-no-access:false
  path:/exhibits/backend/


/*
 * Checking if caller supplied an [id] argument, at which point we populate the widget
 * with the existing values from that record.
 */
.defaults
  price:0
.data
if:x:/../*/id?value

  /*
   * Edit mode.
   */
  eval-x:x:/+/*/*
  add:x:/@.data
    micro.evaluate.file:@INGEN/modules/exhibits/common/model/get-exhibit.hl
      id:x:/../*/id?value


/*
 * Retrieving all "exhibits editor plugins", which in the core implies only the image module's
 * ability to embed images, by browsing the available images in the system. This can easily
 * be extended by creating an Active Event, who's name is [ingen.exhibits.plugins.editor.xxx],
 * where "xxx" is some unique name, describing your exhibits editor's plugin.
 *
 * These plugins are expected to be buttons of some sort, and will be injected into the button
 * strip at the bottom of the modal widget, between the save and close button.
 */
vocabulary:~ingen.exhibits.plugins.editor.
for-each:x:/-/*?value

  /*
   * Invoking plugin event, and adding its result to our widget collection below.
   */
  set:x:/+?name
    src:x:/@_dp?value
  foo
  insert-before:x:/../*/create-widgets/**/widgets/=button-strip/0/-
    src:x:/./-/*


/*
 * Creating a modal widget for creating a new exhibit, or editing an existing exhibit.
 */
eval-x:x:/+/**/.id
create-widgets
  micro.widgets.modal:themepark-add-exhibit-modal
    events

      /*
       * Common helper event to hide some price widget,depending upon whether or not
       * the price module is in use or not.
       */
      ingen.exhibits.hide-price-widget

        /*
         * Checking if system is configured to hide pricing information.
         */
        if
          ingen.settings.show-price-information
          =:bool:false

          /*
           * Hiding wrapper strip for value.
           */
          p5.web.widgets.find-first-ancestor:x:/../*/_arg?value
            element:div
          set-widget-property:x:/-/*/*?value
            style:"display:none;"

    widgets

      /*
       * Some simple header for our modal widget.
       */
      h2
        innerValue:Exhibit data

      /*
       * Name of exhibit.
       */
      ingen.widgets._input-field
        info:Name
        type:text
        .data-field:name
        placeholder:Name ...
        value:x:/@.data/*/name?value
        onkeydown:@"if (event.keyCode == 13) {p5.$('add-edit-exhibit-save-button').raise('onclick');return false;} else if (event.keyCode == 27) {p5.$('close-add-edit-exhibit-save-button').raise('onclick');return false;}"
        oninit

          /*
           * Setting initial focus to name widget.
           */
          micro.page.set-focus:x:/../*/_event?value

      /*
       * Adult price for exhibit.
       */
      ingen.widgets._input-field
        info:Price
        type:number
        .data-field:price
        placeholder:Price ...
        value:x:(/@.data/*/price|/@.defaults/*/price)/[0,1]?value
        onkeydown:@"if (event.keyCode == 13) {p5.$('add-edit-exhibit-save-button').raise('onclick');return false;} else if (event.keyCode == 27) {p5.$('close-add-edit-exhibit-save-button').raise('onclick');return false;}"
        oninit

          /*
           * Invoking common lambda event which will hide current widget if price module is not
           * being used.
           */
          ingen.exhibits.hide-price-widget:x:/../*/_event?value

      /*
       * Children price for exhibit.
       */
      ingen.widgets._input-field
        info:Children price
        type:number
        .data-field:children_price
        placeholder:Children price ...
        value:x:(/@.data/*/children_price|/@.defaults/*/price)/[0,1]?value
        onkeydown:@"if (event.keyCode == 13) {p5.$('add-edit-exhibit-save-button').raise('onclick');return false;} else if (event.keyCode == 27) {p5.$('close-add-edit-exhibit-save-button').raise('onclick');return false;}"
        oninit

          /*
           * Invoking common lambda event which will hide current widget if price module is not
           * being used.
           */
          ingen.exhibits.hide-price-widget:x:/../*/_event?value

      /*
       * Hidden input widget containing database id of existing exhibit.
       */
      input
        type:hidden
        value:x:/@.data/*/id?value
        .data-field:id

      /*
       * Description Markdown widget.
       */
      label
        innerValue:Description (Markdown)
      micro.widgets.codemirror:admin-exhibits-markdown-editor
        mode:markdown
        .data-field:description
        value:x:/@.data/*/description?value

      /*
       * Toolbar at the bottom allowing user to save exhibit, add image to Markdown content,
       * or close modal widget without saving.
       */
      div
        class:right strip
        widgets:button-strip

          /*
           * Save button.
           */
          button:add-edit-exhibit-save-button
            innerValue:Save
            onclick

              /*
               * Serializing form and invoking file responsible for creating a new record in database.
               */
              micro.form.serialize:themepark-add-exhibit-modal

              /*
               * Checking if this is an edit operation.
               */
              if:x:/@micro.form.serialize/*/id?value
                =:

                /*
                 * Removing [id], since this is not en edit operation.
                 */
                set:x:/@micro.form.serialize/*/id

              /*
               * Invoking file responsible for creating/editing exhibit.
               */
              add:x:/+
                src:x:/@micro.form.serialize/*
              micro.evaluate.file:@INGEN/modules/exhibits/backend/model/add-edit-exhibit.hl

              /*
               * Deleting widget and re-databinding datagrid.
               */
              delete-widget:themepark-add-exhibit-modal
              ingen.widgets.exhibits._datagrid.databind

              /*
               * Provding some visual feedback to user.
               */
              micro.windows.info:Successfully updated exhibits
                class:micro-windows-info success

          /*
           * Close modal widget button.
           */
          button:close-add-edit-exhibit-save-button
            innerValue:Close
            onclick

              /*
               * Helper Ajax callback to simply delete modal widget without saving anything.
               */
              delete-widget:themepark-add-exhibit-modal

