
/*
 * Returns ticket information to caller.
 */


/*
 * Sanity checking invocation.
 */
micro.lambda.contract.min:x:/..
  id:long


/*
 * Opening databas, selecting ticket data, and returning to caller.
 */
p5.mysql.connect:[ingen]

  /*
   * First selecting tickets_collection data.
   */
  p5.mysql.select:@"select tc.id as id, tc.purchaser_name as name, tc.purchaser_email as email, e.name as exhibit
  from tickets_collection as tc
    inner join exhibits as e on tc.exhibit_id = e.id
where tc.id = @id"
    @id:x:/../*/id?value
  if:x:/-/*?count
    =:int:0

    /*
     * Ticket doesn't exist!
     */
    throw:No such ticket!

  /*
   * Adding tickets_collection to [return] invocation.
   */
  add:x:/..p5.mysql.connect/*/return
    src:x:/@p5.mysql.select/*/*

  /*
   * Then figuring out number of adults in tickets_collection.
   */
  p5.mysql.scalar:select count(*) from tickets where tickets_collection_id = @id and is_child = 0
    @id:x:/../*/id?value
  if:x:/-?value.int
    !=:int:0

    /*
     * There are adults tickets in collection.
     */
    eval-x:x:/+/*/*
    add:x:/..p5.mysql.connect/*/return
      src
        adults:x:/@p5.mysql.scalar?value

  /*
   * Then figuring out number of children in tickets_collection.
   */
  p5.mysql.scalar:select count(*) from tickets where tickets_collection_id = @id and is_child = 1
    @id:x:/../*/id?value
  if:x:/-?value.int
    !=:int:0

    /*
     * There are children tickets in collection.
     */
    eval-x:x:/+/*/*
    add:x:/..p5.mysql.connect/*/return
      src
        children:x:/@p5.mysql.scalar?value


  /*
   * Returning data to caller.
   */
  return
